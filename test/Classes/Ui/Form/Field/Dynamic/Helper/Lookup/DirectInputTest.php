<?php
/**
 * Created by PhpStorm.
 * User: anton
 * Date: 3-2-20
 * Time: 11:47
 */

namespace Test\Classes\Ui\Form\FieldHelper\Lookup;

use PHPUnit\Framework\TestCase;
use Ui\Form\Field\Dynamic\Helper\Lookup\DirectInput;

class DirectInputTest extends TestCase
{
    private static $bIsSetUp = false;

    private function getMockInput(): array
    {
        return [
            ['id' => 1, 'name' => 'Nederland'],
            ['id' => 2, 'name' => 'Belgie'],
            ['id' => 3, 'name' => 'Luxemburg'],
            ['id' => 4, 'name' => 'Duitsland'],
        ];
    }

    function setUp()
    {
        if (!self::$bIsSetUp) {
            self::$bIsSetUp = true;

            $oDirectInput = new DirectInput($this->getMockInput(), 'name');

            $aDefinition = [
                'function getLookups($mSelectedItem){',
                    $oDirectInput->getLookupsFunctionBody(),
                '}'
            ];

            $sDefinition = join(PHP_EOL, $aDefinition);
            eval($sDefinition);


            parent::setUp(); // TODO: Change the autogenerated stub
        }
    }



    public function testGetLookupsFunctionBody()
    {
        /** @noinspection PhpUndefinedFunctionInspection */
        $aResult = getLookups(1);

        $this->assertTrue(isset($aResult[0]['selected']) && $aResult[0]['selected'] === 'selected');
        $this->assertFalse(isset($aResult[2]['selected']));

        /** @noinspection PhpUndefinedFunctionInspection */
        $aResult = getLookups(3);

        $this->assertTrue(isset($aResult[3]['label']));
        $this->assertTrue(isset($aResult[3]['id']));

        $this->assertTrue(isset($aResult[2]['selected']) && $aResult[2]['selected'] === 'selected');
        $this->assertFalse(isset($aResult[0]['selected']));
    }
}
